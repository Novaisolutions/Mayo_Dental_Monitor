name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 🔍 Linting y Type Checking
  lint-and-type-check:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔍 Run ESLint
      run: npm run lint
      
    - name: 🔍 Type Check
      run: npx tsc --noEmit
      
  # 🧪 Testing
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-type-check
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🧪 Run tests
      run: npm test
      
  # 🏗️ Build
  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    needs: [lint-and-type-check, test]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 📦 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: dist/
        
  # 🚀 Deploy Preview (Solo en PRs)
  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🚀 Deploy to Vercel (Preview)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
  # 🚀 Deploy Production (Solo en main)
  deploy-production:
    name: 🚀 Deploy Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build project
      run: npm run build
      
    - name: 🚀 Deploy to Vercel (Production)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
  # 📊 Security Scan
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📥 Install dependencies
      run: npm ci
      
    - name: 🔒 Run security audit
      run: npm audit --audit-level moderate
      
    - name: 🔒 Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high